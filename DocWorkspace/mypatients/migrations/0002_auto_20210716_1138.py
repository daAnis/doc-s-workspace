# Generated by Django 3.1.7 on 2021-07-16 07:38

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mypatients.models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('mypatients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClinicalRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ward', models.PositiveSmallIntegerField(verbose_name='Номер палаты')),
                ('diagnosis', models.TextField(verbose_name='Краткий диагноз')),
                ('date_time', models.DateTimeField(auto_now_add=True, verbose_name='Время поступления')),
                ('complaint', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Жалобы при поступлении')),
                ('anamnesis', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Anamnesis morbi')),
                ('habitual_intoxication', ckeditor.fields.RichTextField(blank=True, default='отрицает.', null=True, verbose_name='Привычные интоксикации')),
                ('occupational_hazards', ckeditor.fields.RichTextField(blank=True, default='отрицает.', null=True, verbose_name='Профессиональные вредности')),
                ('epidanamnesis', ckeditor.fields.RichTextField(blank=True, default='за границы Самарской области последние 14 дней не выезжал(а), контакт с лихорадящими больными отрицает.', null=True, verbose_name='Эпиданамнез')),
                ('allergic_history', ckeditor.fields.RichTextField(blank=True, default='не отягощен.', null=True, verbose_name='Аллергический анамнез')),
                ('blood_transfusion', ckeditor.fields.RichTextField(blank=True, default='не проводились.', null=True, verbose_name='Гемотрансфузии')),
                ('expert_history', ckeditor.fields.RichTextField(blank=True, default='в л/н не нуждается.', null=True, verbose_name='Экспертный анамнез')),
                ('past_illnesses', ckeditor.fields.RichTextField(blank=True, default='вирусный гепатит отриц., туберкулез отриц., ВИЧ отриц., сахарный диабет отриц.', null=True, verbose_name='Перенесенные заболевания')),
                ('status_p_c', ckeditor.fields.RichTextField(blank=True, default='общее состояние средней степени тяжести. Положение активное. Сознание ясное. Телосложение правильное. Кожные покровы бледно-розовые. Слизистые чистые. Отёков нет. Варикозное расширение подкожных вен - нет. Подкожно-жировой слой развит умеренно. Лимфатические узлы не увеличены, безболезненные.', null=True, verbose_name='Status praesens communis')),
                ('respiratory_system', ckeditor.fields.RichTextField(blank=True, default='Голос обычный. Форма грудной клетки цилиндрическая. Асимметрии грудной клетки нет. Число дыханий в 1 мин. 17. Одышки нет. Перкуторно лёгочный тон. Аускультативно везикулярное дыхание.', null=True, verbose_name='Органы дыхания')),
                ('circulatory_organs', ckeditor.fields.RichTextField(blank=True, default='При осмотре области сердца без особенностей. Границы относительной сердечной тупости: расширены влево. Аускультация сердца тоны сердца приглушены, ритм правильный. Исследование артерий: Пульс 70 ударов в 1 мин, удовлетворительных свойств. Артериальное давление : на правой руке 120 и 80 мм рт. ст,на левой руке 120 и 80 мм рт. ст.', null=True, verbose_name='Органы кровообращения')),
                ('digestive_organs', ckeditor.fields.RichTextField(blank=True, default='Язык чистый, влажный. Живот имеет округлую конфигурацию. Свободной жидкости нет. Болезненности нет. Стул был накануне оформленный. Печень у края рёберной дуги. Желчный пузырь не пальпируется. Селезенка не пальпируется.', null=True, verbose_name='Органы пищеварения')),
                ('urinary_organs', ckeditor.fields.RichTextField(blank=True, default='Почечная область при осмотре без особенностей. Симптом Пастернацкого отрицательный с двух сторон. Диурез достаточный.', null=True, verbose_name='Органы мочевыделения')),
                ('status_localis', ckeditor.fields.RichTextField(blank=True, default='Менингеальных знаков нет. Зрачки D=S. Фотореакция живая, содружественная. Глазные щели D=S. Нистагма нет. Движения глазных яблок в полном объеме. Лицо симметрично. Язык по средней линии. Сила во всех группах мышц 5 баллов. Сухожильные рефлексы с рук и ног D=S. Патологических знаков нет. Чувствительных нарушений не выявленно. Симптомы натяжения отрицательные. В позе Ромберга - устойчив. Кординаторные пробы выполняет уверенно с двух сторон. Походка не нарушена.', null=True, verbose_name='Status localis')),
                ('preliminary_diagnosis', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Предварительный диагноз')),
                ('primary_diagnosis', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Основной диагноз')),
                ('data_from_additional_research_methods', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Данные дополнительных методов исследования')),
                ('recommendation', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Рекомендации')),
                ('discharge', models.FileField(blank=True, null=True, upload_to=mypatients.models.record_file_name, verbose_name='Выписка')),
                ('record', models.FileField(blank=True, null=True, upload_to=mypatients.models.record_file_name, verbose_name='История')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Врач')),
            ],
            options={
                'verbose_name': 'История болезни',
                'verbose_name_plural': 'Истории болезней',
            },
        ),
        migrations.CreateModel(
            name='Diary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время')),
                ('complaint', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Жалобы на')),
                ('status_p_c', ckeditor.fields.RichTextField(blank=True, default='общее состояние средней степени тяжести. Положение активное. Сознание ясное. Телосложение правильное. Кожные покровы бледно-розовые. Слизистые чистые. Отёков нет. Варикозное расширение подкожных вен - нет. Подкожно-жировой слой развит умеренно. Лимфатические узлы не увеличены, безболезненные.', null=True, verbose_name='Объективный статус')),
                ('status_localis', ckeditor.fields.RichTextField(blank=True, default='В сознании, оглушение (легкое), сопор, кома . Адекватен. Снижение критики, памяти, внимания. Фон настроения. ЧМН: Зрачки округлой формы D=S. Лицо : симметричное, центральный, периферический парез VII п. справа, слева. Гипомимия. SNy - нет,установочный,среднеразмашистый, затухающий вправо, влево. Горизонтальный, вертикальный, при взгладе прямо, в крайних отведениях. Язык - по средней линии, отклоняется вправо, влево. Чувствительность: - сохранена - гемигипестезия - справа, слева. Тонус: не изменен; повышен - по пирамидному D S- по э\\пирамидному D S Сила: силовой разницы нет: D=S= баллов , парез справа / слева баллов в руке, баллов ноге. Походка: не изменена, не может ходить, атактическая,покачивается, гемипаретическая, олигобрадикинезия. В п. Ромберга устойчив , покачивается, не стоит. КП – выполняет удовлетворительно, нечетко - справа , слева, с 2-х сторон. Сухожильный рефлексы: живые,торпидные, с рук D S,с ног D S. (+) с-м Бабинского (+) с-м хоботка. ', null=True, verbose_name='Неврологический статус')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mypatients.clinicalrecord', verbose_name='История болезни')),
            ],
            options={
                'verbose_name': 'Дневник',
                'verbose_name_plural': 'Дневники',
            },
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Вид обследования')),
                ('date_1', models.DateField(auto_now_add=True, verbose_name='Дата назначения')),
                ('date_2', models.DateField(auto_now=True, verbose_name='Дата исполнения')),
                ('result', models.FileField(blank=True, upload_to=mypatients.models.examination_file_name, verbose_name='Результат')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mypatients.clinicalrecord', verbose_name='История болезни')),
            ],
            options={
                'verbose_name': 'Обследование',
                'verbose_name_plural': 'Обследования',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(verbose_name='Уведомление')),
                ('url', models.URLField(verbose_name='Ссылка')),
                ('date_time', models.DateTimeField(auto_now_add=True, verbose_name='Время')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Врач')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='ФИО')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Номер телефона')),
                ('address', models.CharField(blank=True, max_length=50, null=True, verbose_name='Адрес')),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Рост')),
                ('weight', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Вес')),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Назначение')),
                ('date_1', models.DateField(verbose_name='Дата начала приема')),
                ('date_2', models.DateField(verbose_name='Дата окончания приема')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mypatients.clinicalrecord', verbose_name='История болезни')),
            ],
            options={
                'verbose_name': 'Назначение',
                'verbose_name_plural': 'Назначения',
            },
        ),
        migrations.CreateModel(
            name='Pressure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(auto_now_add=True, verbose_name='Время замера')),
                ('diastole', models.PositiveSmallIntegerField(verbose_name='Дистола')),
                ('systole', models.PositiveSmallIntegerField(verbose_name='Систола')),
                ('puls', models.PositiveSmallIntegerField(verbose_name='Пульс')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mypatients.clinicalrecord', verbose_name='История болезни')),
            ],
            options={
                'verbose_name': 'Давление и пульс',
                'verbose_name_plural': 'Значения давления и пульса',
            },
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(auto_now_add=True, verbose_name='Время замера')),
                ('value', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='Значение')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mypatients.clinicalrecord', verbose_name='История болезни')),
            ],
            options={
                'verbose_name': 'Температура',
                'verbose_name_plural': 'Температуры',
            },
        ),
        migrations.DeleteModel(
            name='User',
        ),
        migrations.AddField(
            model_name='clinicalrecord',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mypatients.patient', verbose_name='Пациент'),
        ),
    ]
